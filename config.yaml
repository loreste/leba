frontend_address: ":5000" # Address for the frontend load balancer
api_port: "8080"         # API management port
peer_port: "8081"        # Port for peer communication
cluster_dns: "leba-cluster.example.com" # DNS for the load balancer cluster
node_id: "leba-node1"         # Unique identifier for this node
frontend_dns: "leba.example.com" # Public-facing DNS

# Allowed ports for each protocol
allowed_ports:
  http: [80]
  https: [443]
  postgres: [5432]
  mysql: [3306]

# Peer nodes in the cluster
initial_peers:
  - address: "leba-peer1.example.com:8081"
    node_id: "leba-peer1"
  - address: "leba-peer2.example.com:8081"
    node_id: "leba-peer2"

# Backend server configurations
backends:
  - address: "192.168.1.10"
    protocol: "http"
    port: 80
    weight: 1
    role: "replica" # HTTP replica backend

  - address: "192.168.1.11"
    protocol: "https"
    port: 443
    weight: 2
    role: "replica" # HTTPS replica backend

  - address: "192.168.2.10"
    protocol: "postgres"
    port: 5432
    weight: 1
    role: "primary" # PostgreSQL primary backend

  - address: "192.168.2.11"
    protocol: "mysql"
    port: 3306
    weight: 1
    role: "replica" # MySQL replica backend

# DNS-based backend configurations
dns_backends:
  - domain: "api.example.com"
    protocol: "http"
    port: 80
    weight: 1
    is_primary: true
    group_name: "api-servers"
    resolution_timeout: 5s
    resolution_interval: 30s
    ttl: 60s

  - domain: "database.example.com"
    protocol: "postgres"
    port: 5432
    weight: 1
    is_primary: true
    group_name: "db-servers"
    resolution_timeout: 5s
    resolution_interval: 30s
    ttl: 60s

# Simple DNS backends using string format (domain:port/protocol)
dns_backend_strings:
  - "api.example.com:80/http"
  - "cache.example.com:6379/redis"
  - "mongo.example.com:27017/mongodb"

# Failover group configurations
failover_groups:
  - name: "api-servers"
    mode: "active-passive"
    backends: ["api1.example.com", "api2.example.com", "api3.example.com"]
    primary: "api1.example.com"

  - name: "db-servers"
    mode: "active-passive"
    backends: ["database1.example.com", "database2.example.com"]
    primary: "database1.example.com"

tls_config:
  enabled: true
  cert_file: "/path/to/cert.pem"
  key_file: "/path/to/key.pem"
  http2: true
  http3: true

cache_config:
  enabled: true
  expiration: 300         # Expiration time for cached items in seconds
  cleanup_interval: 60    # Interval for cleaning up expired items in seconds

# Frontend services dynamically defined
frontend_services:
  - protocol: "http"
    port: 80
  - protocol: "https"
    port: 443
  - protocol: "postgres"
    port: 5432
  - protocol: "mysql"
    port: 3306
