name: Build LEBA

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build LEBA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          check-latest: true
      
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Get dependencies
        run: go mod download
      
      - name: Run tests
        run: go test -tags basic ./internal/config

      - name: Build
        run: |
          GO_VERSION=$(go version | awk '{print $3}')
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          GIT_COMMIT=$(git rev-parse --short HEAD)
          PLATFORM=$(go env GOOS)/$(go env GOARCH)
          
          go build -o leba \
            -ldflags "-X 'leba/internal/version.GitCommit=$GIT_COMMIT' \
                      -X 'leba/internal/version.BuildDate=$BUILD_DATE' \
                      -X 'leba/internal/version.GoVersion=$GO_VERSION' \
                      -X 'leba/internal/version.Platform=$PLATFORM'" \
            ./cmd/server
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: leba
          path: leba

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: leba
          
      - name: Make executable
        run: chmod +x leba
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            leba
          draft: false
          prerelease: contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha')
          generate_release_notes: true